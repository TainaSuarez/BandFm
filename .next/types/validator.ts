// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/banners/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/banners">> = Specific
  const handler = {} as typeof import("../../src/app/admin/banners/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/empresas/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/empresas">> = Specific
  const handler = {} as typeof import("../../src/app/admin/empresas/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/noticias/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/noticias">> = Specific
  const handler = {} as typeof import("../../src/app/admin/noticias/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../src/app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/podcasts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/podcasts">> = Specific
  const handler = {} as typeof import("../../src/app/admin/podcasts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/programacao/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/programacao">> = Specific
  const handler = {} as typeof import("../../src/app/admin/programacao/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/promocoes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/promocoes">> = Specific
  const handler = {} as typeof import("../../src/app/admin/promocoes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/clube-ouvintes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/clube-ouvintes">> = Specific
  const handler = {} as typeof import("../../src/app/clube-ouvintes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/empresa/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/empresa/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/empresa/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/empresa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/empresa">> = Specific
  const handler = {} as typeof import("../../src/app/empresa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/empresa/perfil/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/empresa/perfil">> = Specific
  const handler = {} as typeof import("../../src/app/empresa/perfil/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/empresa/produtos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/empresa/produtos">> = Specific
  const handler = {} as typeof import("../../src/app/empresa/produtos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/equipe/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/equipe">> = Specific
  const handler = {} as typeof import("../../src/app/equipe/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login-empresa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login-empresa">> = Specific
  const handler = {} as typeof import("../../src/app/login-empresa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/noticias/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/noticias">> = Specific
  const handler = {} as typeof import("../../src/app/noticias/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/podcasts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/podcasts">> = Specific
  const handler = {} as typeof import("../../src/app/podcasts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/programacao/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/programacao">> = Specific
  const handler = {} as typeof import("../../src/app/programacao/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/promocoes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/promocoes">> = Specific
  const handler = {} as typeof import("../../src/app/promocoes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/sobre/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sobre">> = Specific
  const handler = {} as typeof import("../../src/app/sobre/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-produto/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-produto">> = Specific
  const handler = {} as typeof import("../../src/app/test-produto/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/login-empresa/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login-empresa">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/login-empresa/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/banners/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/banners/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/banners/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/banners/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/banners">> = Specific
  const handler = {} as typeof import("../../src/app/api/banners/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/empresas/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/empresas/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/empresas/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/empresas/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/empresas">> = Specific
  const handler = {} as typeof import("../../src/app/api/empresas/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/noticias/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/noticias/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/noticias/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/noticias/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/noticias">> = Specific
  const handler = {} as typeof import("../../src/app/api/noticias/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/podcasts/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/podcasts/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/podcasts/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/podcasts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/podcasts">> = Specific
  const handler = {} as typeof import("../../src/app/api/podcasts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/produtos/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/produtos/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/produtos/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/produtos/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/produtos">> = Specific
  const handler = {} as typeof import("../../src/app/api/produtos/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/programacao/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/programacao/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/programacao/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/programacao/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/programacao">> = Specific
  const handler = {} as typeof import("../../src/app/api/programacao/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/promocoes/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/promocoes/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/promocoes/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/promocoes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/promocoes">> = Specific
  const handler = {} as typeof import("../../src/app/api/promocoes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
