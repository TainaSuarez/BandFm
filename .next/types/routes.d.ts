// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/banners" | "/admin/empresas" | "/admin/noticias" | "/admin/podcasts" | "/admin/programacao" | "/admin/promocoes" | "/clube-ouvintes" | "/empresa" | "/empresa/[id]" | "/empresa/perfil" | "/empresa/produtos" | "/equipe" | "/login" | "/login-empresa" | "/noticias" | "/podcasts" | "/programacao" | "/promocoes" | "/sobre" | "/test-produto"
type AppRouteHandlerRoutes = "/api/auth/login" | "/api/auth/login-empresa" | "/api/banners" | "/api/banners/[id]" | "/api/empresas" | "/api/empresas/[id]" | "/api/noticias" | "/api/noticias/[id]" | "/api/podcasts" | "/api/podcasts/[id]" | "/api/produtos" | "/api/produtos/[id]" | "/api/programacao" | "/api/programacao/[id]" | "/api/promocoes" | "/api/promocoes/[id]" | "/api/test" | "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/banners": {}
  "/admin/empresas": {}
  "/admin/noticias": {}
  "/admin/podcasts": {}
  "/admin/programacao": {}
  "/admin/promocoes": {}
  "/api/auth/login": {}
  "/api/auth/login-empresa": {}
  "/api/banners": {}
  "/api/banners/[id]": { "id": string; }
  "/api/empresas": {}
  "/api/empresas/[id]": { "id": string; }
  "/api/noticias": {}
  "/api/noticias/[id]": { "id": string; }
  "/api/podcasts": {}
  "/api/podcasts/[id]": { "id": string; }
  "/api/produtos": {}
  "/api/produtos/[id]": { "id": string; }
  "/api/programacao": {}
  "/api/programacao/[id]": { "id": string; }
  "/api/promocoes": {}
  "/api/promocoes/[id]": { "id": string; }
  "/api/test": {}
  "/api/upload": {}
  "/clube-ouvintes": {}
  "/empresa": {}
  "/empresa/[id]": { "id": string; }
  "/empresa/perfil": {}
  "/empresa/produtos": {}
  "/equipe": {}
  "/login": {}
  "/login-empresa": {}
  "/noticias": {}
  "/podcasts": {}
  "/programacao": {}
  "/promocoes": {}
  "/sobre": {}
  "/test-produto": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
